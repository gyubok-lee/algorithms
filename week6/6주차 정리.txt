1. cctv
1) 풀이
- cctv 방향에 따라 볼 수 있는 칸들을 저장.
- 각 cctv에 대하여 dfs
- [cctv1의 방향들, cctv2의 방향들, ....] 의 구조
2) 팁
- 방향의 전환과 탐색에 대해 1~2줄의 간단한 코드가 존재함

2. 치킨 배달
1) 풀이
- 모든 가능한 조합을 찾는다
- 각 조합에 대해 전체 거리 합을 구한다

3. 경주로 건설
1) 풀이
- 동적계획법으로 arr을 깔고, bfs를 통해 각 칸마다 최소비용 계산
2) 팁
- 그리디한 문제일 경우 동적계획법을 우선적으로 떠올릴 것
- 같은 칸에 대해 계속해서 비교가 필요하면 visit을 안 써야함

5. 제제 명단
1) 풀이
- 백트레킹을 통해 모든 경우의 수 찾기
2) 팁
- 기존에 있던 집합인지를 확인하는 것과, 깊은 복사를 효율적으로 하는 것이 중요함

6. 인구이동
1) 풀이
- 모든 칸에 대해서 연합될 수 있는지를 찾고
- 연합된다면 인구를 분배, cnt += 1
- cnt가 0일 때까지 위 과정들을 반복
2) 팁
- 가장 큰 반복문의 설정이 관건이였음. 각 반복문 마다 어떤 함수가 어떻게 돌아갈지 설계필요

7. 미세먼지 안녕
1) 풀이
- 공기청정기의 위치를 먼저 저장후, 미세먼지 확산-공기청정기 가동 순으로 진행
2) 팁
- 차라리 2차원 배열을 하나 만드는게 오히려 빠르고 쉽다.
- 효율적인 반복문 구상의 필요성.

9. 연구소
1) 풀이
- 일반적인 시뮬레이션
2) 팁
- 카운트를 세는 로직을 찾는게 더 어려웠음

10. 게리맨더링

----------------------------------------------------------------------------------
1. 2차원 배열을 하나 더 쓰는게 이해하기도 쉽고 오히려 더 빠를 수 있다.
2. 단순 반복문을 1~2줄의 짧은 코드로 구현하는 로직 훈련이 필요하다.
3. (5번문제) 결과를 저장하는 방식의 로직
4. 동적계획법의 가능성을 언제나 고려할 것